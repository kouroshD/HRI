<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>planner: endorActionClass Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../endor.jpg"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">planner
   &#160;<span id="projectnumber">2.0</span>
   </div>
   <div id="projectbrief">C++ library to create and navigate AND-OR graphs</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="../../functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="../../de/d77/classendorActionClass-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">endorActionClass Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="../../closed.png" alt="+"/> Collaboration diagram for endorActionClass:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d7/df2/classendorActionClass__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5f689117d01a96e715217c59b804a073"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5f689117d01a96e715217c59b804a073"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>endorActionClass</b> (int, int, string action_definition_path, string hyperArc_action_path)</td></tr>
<tr class="separator:a5f689117d01a96e715217c59b804a073"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96a38eadda5c1babea9b898c68ed8af3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dd2/classendorActionClass.xhtml#a96a38eadda5c1babea9b898c68ed8af3">nodeActionListFunction</a> (void)</td></tr>
<tr class="separator:a96a38eadda5c1babea9b898c68ed8af3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe7fc1bf135365f8d048cc145e9ede99"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afe7fc1bf135365f8d048cc145e9ede99"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ActionListFunction</b> (void)</td></tr>
<tr class="separator:afe7fc1bf135365f8d048cc145e9ede99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab25829b1e5cac43b307c1f008de6c642"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab25829b1e5cac43b307c1f008de6c642"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>nodeListFunction</b> (void)</td></tr>
<tr class="separator:ab25829b1e5cac43b307c1f008de6c642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78694f28548976fcc063f443895f70d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dd2/classendorActionClass.xhtml#a78694f28548976fcc063f443895f70d7">humanActionSearch</a> (string, <a class="el" href="../../db/dbf/classAOgraph.xhtml">AOgraph</a> &amp;)</td></tr>
<tr class="separator:a78694f28548976fcc063f443895f70d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae372c0d8f839213dae98a2abc70d72f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aae372c0d8f839213dae98a2abc70d72f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>robStopFunction</b> (void)</td></tr>
<tr class="separator:aae372c0d8f839213dae98a2abc70d72f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ae414375c7e8300c05408209df50c36c3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae414375c7e8300c05408209df50c36c3"></a>
const int&#160;</td><td class="memItemRight" valign="bottom"><b>nodeActionList_width</b></td></tr>
<tr class="separator:ae414375c7e8300c05408209df50c36c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f58c12e2a5aaa860bf59541aeffc15c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6f58c12e2a5aaa860bf59541aeffc15c"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>Number_of_Nodes</b></td></tr>
<tr class="separator:a6f58c12e2a5aaa860bf59541aeffc15c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d075fd6980e4e89d8486191d5433212"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0d075fd6980e4e89d8486191d5433212"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>Number_of_Actions</b></td></tr>
<tr class="separator:a0d075fd6980e4e89d8486191d5433212"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6d16acbb8ac0e8bddbd99e5a9125582"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af6d16acbb8ac0e8bddbd99e5a9125582"></a>
const int&#160;</td><td class="memItemRight" valign="bottom"><b>Number_of_Arms_State</b></td></tr>
<tr class="separator:af6d16acbb8ac0e8bddbd99e5a9125582"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafbc9ac5d659820e59bb8f7d3b86dec4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aafbc9ac5d659820e59bb8f7d3b86dec4"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><b>suggested_Node</b></td></tr>
<tr class="separator:aafbc9ac5d659820e59bb8f7d3b86dec4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af54402be182f2daf8fced88c6b07538a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af54402be182f2daf8fced88c6b07538a"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><b>solved_Node</b></td></tr>
<tr class="separator:af54402be182f2daf8fced88c6b07538a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed786cf27dba6916434d18344809b0a2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aed786cf27dba6916434d18344809b0a2"></a>
string **&#160;</td><td class="memItemRight" valign="bottom"><b>node_action_list</b></td></tr>
<tr class="separator:aed786cf27dba6916434d18344809b0a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a294c3a7ef4b39d319a6ff06e64fdb9ee"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a294c3a7ef4b39d319a6ff06e64fdb9ee"></a>
int **&#160;</td><td class="memItemRight" valign="bottom"><b>node_action_flag</b></td></tr>
<tr class="separator:a294c3a7ef4b39d319a6ff06e64fdb9ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a331bcb5dcfbeb37951d1feadd338c9ce"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a331bcb5dcfbeb37951d1feadd338c9ce"></a>
string *&#160;</td><td class="memItemRight" valign="bottom"><b>actionCommand</b></td></tr>
<tr class="separator:a331bcb5dcfbeb37951d1feadd338c9ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7338e205ef59be6b502ed774d164725"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af7338e205ef59be6b502ed774d164725"></a>
std::vector&lt; std::vector<br class="typebreak"/>
&lt; std::string &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Node_action_list</b></td></tr>
<tr class="separator:af7338e205ef59be6b502ed774d164725"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca4853ec200f206d4e22a8840df509b5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aca4853ec200f206d4e22a8840df509b5"></a>
std::vector&lt; std::vector<br class="typebreak"/>
&lt; std::string &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Action_DEF_list</b></td></tr>
<tr class="separator:aca4853ec200f206d4e22a8840df509b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b304fb3e06840488fd8c80930f489b6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5b304fb3e06840488fd8c80930f489b6"></a>
std::vector&lt; std::vector&lt; int &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Node_action_flag</b></td></tr>
<tr class="separator:a5b304fb3e06840488fd8c80930f489b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee420d03be7516eeb2ed2cdfc66387c2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aee420d03be7516eeb2ed2cdfc66387c2"></a>
std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Number_of_Action_For_Each_Node</b></td></tr>
<tr class="separator:aee420d03be7516eeb2ed2cdfc66387c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1fb7c3f892a64f9f524efa18e6e1044"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad1fb7c3f892a64f9f524efa18e6e1044"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><b>solved_action</b></td></tr>
<tr class="separator:ad1fb7c3f892a64f9f524efa18e6e1044"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2743c1e8e0db2962d3f4bf96b0f66c7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad2743c1e8e0db2962d3f4bf96b0f66c7"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><b>suggested_action</b></td></tr>
<tr class="separator:ad2743c1e8e0db2962d3f4bf96b0f66c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a994a0868e4fcfb7382a233a81ed2be84"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a994a0868e4fcfb7382a233a81ed2be84"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>actionNumber</b></td></tr>
<tr class="separator:a994a0868e4fcfb7382a233a81ed2be84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affb2e72295d3d3c7ffc840183d8117d8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="affb2e72295d3d3c7ffc840183d8117d8"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>node_number</b></td></tr>
<tr class="separator:affb2e72295d3d3c7ffc840183d8117d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb9bdbdae372e19c780d794f8058f436"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adb9bdbdae372e19c780d794f8058f436"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>actionFlag</b></td></tr>
<tr class="separator:adb9bdbdae372e19c780d794f8058f436"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a056f2a389bba7c465972df8a01b9ff5f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a056f2a389bba7c465972df8a01b9ff5f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>nodeFlag</b></td></tr>
<tr class="separator:a056f2a389bba7c465972df8a01b9ff5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9862d52618d3976ccbed2f7cbc613c2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab9862d52618d3976ccbed2f7cbc613c2"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><b>responsible</b></td></tr>
<tr class="separator:ab9862d52618d3976ccbed2f7cbc613c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb470094f9aea5fa59573cfb6721a6ea"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aeb470094f9aea5fa59573cfb6721a6ea"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>ambiguity_Number</b></td></tr>
<tr class="separator:aeb470094f9aea5fa59573cfb6721a6ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ae38c615e972990f7f6ee40e3f8a1dff0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae38c615e972990f7f6ee40e3f8a1dff0"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>suggested_node_number</b></td></tr>
<tr class="separator:ae38c615e972990f7f6ee40e3f8a1dff0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60f69aec0ad67a6bc5eb3bb8edd7a3cd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a60f69aec0ad67a6bc5eb3bb8edd7a3cd"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>suggested_action_number</b></td></tr>
<tr class="separator:a60f69aec0ad67a6bc5eb3bb8edd7a3cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="../../d3/d14/endorAction_8hpp_source.xhtml#l00033">33</a> of file <a class="el" href="../../d3/d14/endorAction_8hpp_source.xhtml">endorAction.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a78694f28548976fcc063f443895f70d7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void endorActionClass::humanActionSearch </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>human_action_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../db/dbf/classAOgraph.xhtml">AOgraph</a> &amp;&#160;</td>
          <td class="paramname"><em>mygraph_EA</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Human_Gesture_Flag=true;</p>
<p>Human_Gesture_Flag=true;</p>
<p>Human_Gesture_Flag=true; obj_nodeAction.actionFlag=false;??? </p>

<p>Definition at line <a class="el" href="../../dd/d4d/endorAction_8cpp_source.xhtml#l00252">252</a> of file <a class="el" href="../../dd/d4d/endorAction_8cpp_source.xhtml">endorAction.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                                                                                      {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    ambiguity_Number=0;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordtype">int</span> j;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <span class="comment">// check feasible and not solved nodes  --&gt; vector of node names,</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                <span class="comment">// last node-action cannot happen because all actions related to Robot.</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;Number_of_Nodes-1;i++) <span class="comment">// -1 Because the number of nodes in the file are one more than the number of nodes in the AO Graph.</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="comment">// 1- check for all the feasible and not-solved nodes:</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">if</span> (mygraph_EA.NodeFeasibiltyInfo(i)==1 &amp;&amp; mygraph_EA.NodeSolveInfo(i)==0)</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        {</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">//          cout&lt;&lt;&quot;z: &quot;&lt;&lt;i&lt;&lt;endl;</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">if</span> (Node_action_list[i][1]==<span class="stringliteral">&quot;Seq&quot;</span> &amp;&amp; Number_of_Action_For_Each_Node[i]&gt;0)</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            {</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                j=0;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                <span class="keywordflow">do</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    <span class="keywordflow">if</span> (Node_action_list[i][j+2]==human_action_name &amp;&amp; Node_action_flag[i][j]==0)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                    {</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                        ambiguity_Number++;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                        suggested_node_number=i;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                        suggested_action_number=j;<span class="comment">//+2</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                        Node_action_flag[i][j]=-1;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">//                      cout&lt;&lt;&quot;***** &quot;&lt;&lt;mygraph_EA.NodeNameInfo(zz)&lt;&lt;&quot; *****&quot;&lt;&lt;endl;</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">//                      cout&lt;&lt;&quot;obj_nodeAction.node_action_list[zz][cc]&quot;&lt;&lt;node_action_list[zz][cc]&lt;&lt;endl;</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">//                      cout&lt;&lt;&quot;obj_cognition.cognitionHMP_get()&quot;&lt;&lt;human_action_name&lt;&lt;endl;</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">//                      cout&lt;&lt;&quot;obj_nodeAction.node_action_flag[zz][cc]&quot;&lt;&lt;node_action_flag[zz][cc]&lt;&lt;endl;</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">//                      cout&lt;&lt;&quot;ambiguity_Number&quot;&lt;&lt;ambiguity_Number&lt;&lt;endl;</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                    }</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">//                  cout&lt;&lt;&quot;*** &quot;&lt;&lt;mygraph_EA.NodeNameInfo(zz)&lt;&lt;&quot; ***&quot;&lt;&lt;endl;</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">//                  cout&lt;&lt;&quot;obj_nodeAction.node_action_list[zz][cc]&quot;&lt;&lt;node_action_list[zz][cc]&lt;&lt;endl;</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">//                  cout&lt;&lt;&quot;obj_cognition.cognitionHMP_get()&quot;&lt;&lt;human_action_name&lt;&lt;endl;</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">//                  cout&lt;&lt;&quot;obj_nodeAction.node_action_flag[zz][cc]&quot;&lt;&lt;node_action_flag[zz][cc]&lt;&lt;endl;</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">//                  cout&lt;&lt;&quot;ambiguity_Number&quot;&lt;&lt;ambiguity_Number&lt;&lt;endl;</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                    j++;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                }</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="keywordflow">while</span>( ( Node_action_flag[i][j-1]==1 || Node_action_flag[i][j-1]==-1) &amp;&amp; j &lt;Number_of_Action_For_Each_Node[i]); <span class="comment">//node_action_list[i][j]!=&quot;0&quot; &amp;&amp;</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                            <span class="comment">// next action not be &quot;0&quot;, and this action flag be 1 to go forward.</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (Node_action_list[i][1]==<span class="stringliteral">&quot;nonSeq&quot;</span> &amp;&amp; Number_of_Action_For_Each_Node[i]&gt;0)</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">//              cout&lt;&lt;mygraph_EA.NodeNameInfo(i)&lt;&lt;&quot;\t&quot;;</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">//              j=0;</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">//              do</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">//              {</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">//                  if (node_action_list[i][j]==human_action_name)</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">//                  {   ambiguity_Number++;</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">//                      break;</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">//                  }</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">//                  j++;</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">//              }</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">//              while( node_action_list[i][j]!=&quot;0&quot; &amp;&amp; j &lt;Number_of_Action_For_Each_Node[i]);</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        }</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">//=============================================================================================</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">if</span> (ambiguity_Number==1)</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="comment">//&amp;&amp; obj_cognition.cognitionHMP_get()==obj_nodeAction.actionCommand[0]</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keywordflow">if</span> (node_number==suggested_node_number )</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        {</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            cout&lt;&lt;<span class="stringliteral">&quot;ambiguity_Number: &quot;</span>&lt;&lt;ambiguity_Number&lt;&lt;endl;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            cout&lt;&lt;FGRN(<span class="stringliteral">&quot;Human Is Following the Path&quot;</span>)&lt;&lt;endl;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="comment">//** these should be the same &amp; action check has been done before, not necessary again!</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="comment">// it is suppossed that each action name is unique in each row of node_action_list.</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <span class="comment">//obj_nodeAction.node_number=suggested_node_number;</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            <span class="comment">//obj_nodeAction.actionNumber=suggested_action_number;</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment"></span>            Node_action_flag[suggested_node_number][suggested_action_number]=1;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            actionFlag=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        }</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node_number!=suggested_node_number)</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        {</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="comment">/* make zero all the actions flag done on node_number now before changing the value of node_number,</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">            because we are changing the path here */</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;Number_of_Action_For_Each_Node[node_number];i++)</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                Node_action_flag[node_number][i]=0;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            cout&lt;&lt;FBLU(<span class="stringliteral">&quot;Human Is Not Following Optimal Path&quot;</span>)&lt;&lt;endl;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            node_number=suggested_node_number;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            actionNumber=suggested_action_number;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            Node_action_flag[suggested_node_number][suggested_action_number]=1;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            actionFlag=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        <span class="comment">// send stop robot command.</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="comment">// * make the all the &quot;-1&quot; elements of the &quot;node_action_flag&quot; matrix to zero, just the ones in the &quot;node_number&quot; line equal to one</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;(Number_of_Nodes);i++)<span class="comment">// No of hyper arcs again, not the nodes?</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <span class="keywordflow">if</span> (Number_of_Action_For_Each_Node[i]&gt;0)</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0;j&lt;Number_of_Action_For_Each_Node[i];j++)</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                    <span class="keywordflow">if</span> (Node_action_flag[i][j]==-1 &amp;&amp; i!=node_number)</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                        Node_action_flag[i][j]=0;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (Node_action_flag[i][j]==-1 &amp;&amp; i==node_number)</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                        Node_action_flag[i][j]=1;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    }</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ambiguity_Number==0 &amp;&amp; human_action_name!=<span class="stringliteral">&quot;ScrewingInitial&quot;</span>)</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <span class="comment">// it means we moved at first (first putDown)</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        cout&lt;&lt;FRED(<span class="stringliteral">&quot;Human Is Moved, No Path, Continue Your Actions Human&quot;</span>)&lt;&lt;endl;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ambiguity_Number&gt;1)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    {</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;&gt;&gt;&gt; ambiguity_Number: &quot;</span>&lt;&lt;ambiguity_Number&lt;&lt;endl;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        cout&lt;&lt;FBLU(<span class="stringliteral">&quot;******************* Ambiguity in Endor  ***********************&quot;</span>)&lt;&lt;endl;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        cout&lt;&lt;FBLU(<span class="stringliteral">&quot;*** Human Continue your Actions Until Ambiguity is Solved!  ***&quot;</span>)&lt;&lt;endl;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="keywordflow">if</span> (responsible==<span class="stringliteral">&quot;H&quot;</span>)</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            actionFlag=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="comment">// suggest an action from optimal path between the possible ones</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    }</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a96a38eadda5c1babea9b898c68ed8af3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void endorActionClass::nodeActionListFunction </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>actionFlag=true;</p>
<p>DEL</p>
<p>actionFlag=true; </p>

<p>Definition at line <a class="el" href="../../dd/d4d/endorAction_8cpp_source.xhtml#l00194">194</a> of file <a class="el" href="../../dd/d4d/endorAction_8cpp_source.xhtml">endorAction.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                                 {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="comment">/* when the last action of a node is done OR number of actions in a node list is zero -&gt;</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">        The node is solved, so do not check for next action*/</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">if</span> (actionNumber==(Number_of_Action_For_Each_Node[node_number]-1) || Number_of_Action_For_Each_Node[node_number]==0 )</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        solved_Node=Node_action_list[node_number][0];</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">if</span> (solved_Node==<span class="stringliteral">&quot;plate_screw_screwPos1&quot;</span> || solved_Node==<span class="stringliteral">&quot;plate_screw_screwPos2&quot;</span>)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            solved_Node=<span class="stringliteral">&quot;plate_screw_screwPos&quot;</span>;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        actionFlag=<span class="keyword">true</span>; <span class="comment">/* we should have this action change here otherwise it</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">                            will go inside next if condition which it should not go */</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        nodeFlag=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        actionNumber=-1;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="comment">/*  Check for the action Human/Robot should perform:</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">        also here we should have the if cond, because in case prev if is correct,</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">            then we should not check for next element*/</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordflow">if</span> (actionFlag==<span class="keyword">false</span>)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        actionNumber=actionNumber+1;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        suggested_action=Node_action_list[node_number][actionNumber+2];</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">if</span> (actionNumber&gt;0 &amp;&amp; Node_action_flag[node_number][actionNumber-1]==0)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            cout&lt;&lt;FRED(<span class="stringliteral">&quot;Previous action in this node is not solved&quot;</span>)&lt;&lt;endl;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="comment">// when we reach &quot;0&quot; actions, it means we reach the requested node.</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment"></span>        <span class="keywordflow">if</span> (suggested_action==<span class="stringliteral">&quot;0&quot;</span>)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            solved_Node=Node_action_list[node_number][0];</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="keywordflow">if</span> (solved_Node==<span class="stringliteral">&quot;plate_screw_screwPos1&quot;</span> || solved_Node==<span class="stringliteral">&quot;plate_screw_screwPos2&quot;</span>)</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                solved_Node=<span class="stringliteral">&quot;plate_screw_screwPos&quot;</span>;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            <span class="comment">//cout&lt;&lt;&quot;***************** solved_Node2: &quot;&lt;&lt;solved_Node&lt;&lt;endl;</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment"></span>            nodeFlag=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            actionNumber=-1;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    actionFlag=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/<a class="el" href="../../d3/d14/endorAction_8hpp_source.xhtml">endorAction.hpp</a></li>
<li>src/<a class="el" href="../../dd/d4d/endorAction_8cpp_source.xhtml">endorAction.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Sep 21 2017 11:52:31 for planner by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
