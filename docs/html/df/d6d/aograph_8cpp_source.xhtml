<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>planner: include/aograph.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../endor.jpg"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">planner
   &#160;<span id="projectnumber">2.0</span>
   </div>
   <div id="projectbrief">C++ library to create and navigate AND-OR graphs</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.xhtml"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">aograph.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//===============================================================================//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Name         : aograph.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// Author(s)    : Barbara Bruno, Yeshasvi Tirupachuri V.S.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Affiliation  : University of Genova, Italy - dept. DIBRIS</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// Description  : AND-OR graph</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//===============================================================================//</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;aograph.h&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../db/dc7/classPath.xhtml#afbe6763440ffa3fd8a3d7edda1a5b1f3">   13</a></span>&#160;<a class="code" href="../../db/dc7/classPath.xhtml#afbe6763440ffa3fd8a3d7edda1a5b1f3">Path::Path</a>(<span class="keywordtype">int</span> cost, <span class="keywordtype">int</span> index)</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#affd535b90eec827989d84bb8f9dbc477">pIndex</a> = index;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#a620169f2195f0ebd14a3d3713ce1b06f">pCost</a> = cost;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#a536e01bc729559a9a53eb9c47ec2e684">pComplete</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;}</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="../../db/dc7/classPath.xhtml#a50403c22dbf5d0a63f8f2d637068b1b3">   23</a></span>&#160;<a class="code" href="../../db/dc7/classPath.xhtml#afbe6763440ffa3fd8a3d7edda1a5b1f3">Path::Path</a>(<span class="keyword">const</span> <a class="code" href="../../db/dc7/classPath.xhtml">Path</a> &amp;toBeCopied, <span class="keywordtype">int</span> index)</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#affd535b90eec827989d84bb8f9dbc477">pIndex</a> = index;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#a620169f2195f0ebd14a3d3713ce1b06f">pCost</a> = toBeCopied.<a class="code" href="../../db/dc7/classPath.xhtml#a620169f2195f0ebd14a3d3713ce1b06f">pCost</a>;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#a536e01bc729559a9a53eb9c47ec2e684">pComplete</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">pathNodes</a> = toBeCopied.<a class="code" href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">pathNodes</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#ae6b8583b7ab7f19c113c2c2f59810edf">pathArcs</a> = toBeCopied.<a class="code" href="../../db/dc7/classPath.xhtml#ae6b8583b7ab7f19c113c2c2f59810edf">pathArcs</a>;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#af75708504af48a056f4cafb9e18e8395">checkedNodes</a> = toBeCopied.<a class="code" href="../../db/dc7/classPath.xhtml#af75708504af48a056f4cafb9e18e8395">checkedNodes</a>;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../db/dc7/classPath.xhtml#a885c9820459010ec106031910947bd80">   34</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/dc7/classPath.xhtml#a885c9820459010ec106031910947bd80">Path::printPathInfo</a>()</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Info of path: &quot;</span> &lt;&lt;<a class="code" href="../../db/dc7/classPath.xhtml#affd535b90eec827989d84bb8f9dbc477">pIndex</a> &lt;&lt;endl;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">//DEBUG: cout&lt;&lt;&quot;Is complete? &quot; &lt;&lt;boolalpha &lt;&lt;pComplete &lt;&lt;endl;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Total cost: &quot;</span> &lt;&lt;<a class="code" href="../../db/dc7/classPath.xhtml#a620169f2195f0ebd14a3d3713ce1b06f">pCost</a> &lt;&lt;endl;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Nodes in path:&quot;</span> &lt;&lt;endl;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">pathNodes</a>.size(); i++)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        cout&lt;&lt;<a class="code" href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">pathNodes</a>[i]-&gt;nName &lt;&lt;<span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="comment">//DEBUG: cout&lt;&lt;&quot;checked? &quot; &lt;&lt;boolalpha &lt;&lt;checkedNodes[i];</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../db/dc7/classPath.xhtml#af75708504af48a056f4cafb9e18e8395">checkedNodes</a>[i] == <span class="keyword">true</span>)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            cout&lt;&lt;<span class="stringliteral">&quot;- done&quot;</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        cout&lt;&lt;endl;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    cout&lt;&lt;endl;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;********&quot;</span>&lt;&lt;endl;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../db/dc7/classPath.xhtml#a7f68b656205f2fb7a375509c81a8d571">   57</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/dc7/classPath.xhtml#a7f68b656205f2fb7a375509c81a8d571">Path::addNode</a>(<a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* node)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="comment">// update the nodes in the path</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">pathNodes</a>.push_back(node);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#af75708504af48a056f4cafb9e18e8395">checkedNodes</a>.push_back(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">// N.B. the cost of the path is updated when the node is checked</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../db/dc7/classPath.xhtml#a6f0a8ece7049d31349dd918e3732f312">   69</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/dc7/classPath.xhtml#a6f0a8ece7049d31349dd918e3732f312">Path::updatePath</a>(<span class="keywordtype">string</span> nameNode, <span class="keywordtype">int</span> cost)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;   <span class="comment">// check whether the node is in the path</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i &lt; (int)<a class="code" href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">pathNodes</a>.size(); i++)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="comment">// keep track of solved nodes</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">pathNodes</a>[i]-&gt;nName == nameNode)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <a class="code" href="../../db/dc7/classPath.xhtml#af75708504af48a056f4cafb9e18e8395">checkedNodes</a>[i] = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// update the cost of the path        </span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml#a620169f2195f0ebd14a3d3713ce1b06f">pCost</a> = <a class="code" href="../../db/dc7/classPath.xhtml#a620169f2195f0ebd14a3d3713ce1b06f">pCost</a> - cost;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="../../db/dc7/classPath.xhtml#ac0e5a1573ee1096da427266c09dee678">   87</a></span>&#160;<a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* <a class="code" href="../../db/dc7/classPath.xhtml#ac0e5a1573ee1096da427266c09dee678">Path::suggestNode</a>()</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* selection = NULL;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// iterate on the nodes in the path, from the last to the first one</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = (<span class="keywordtype">int</span>)<a class="code" href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">pathNodes</a>.size()-1; i &gt; -1; i--)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="comment">// rationale for the suggestion:</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="comment">// 1. move along the path from the leaves to the head</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="comment">// 2. choose the first feasible &amp; not-solved node</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../db/dc7/classPath.xhtml#af75708504af48a056f4cafb9e18e8395">checkedNodes</a>[i] == <span class="keyword">false</span>)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">pathNodes</a>[i]-&gt;nFeasible == <span class="keyword">true</span>)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                selection = <a class="code" href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">pathNodes</a>[i];</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// raise an error if the suggested node is NULL</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">if</span> (selection == NULL)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[ERROR] No suggestion possible.&quot;</span> &lt;&lt;endl;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> selection;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#a032ca4643c87641235d59506090a53d1">  117</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#a032ca4643c87641235d59506090a53d1">AOgraph::addNode</a>(<span class="keywordtype">string</span> nameNode, <span class="keywordtype">int</span> cost)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="comment">// create the node</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a> toAdd(nameNode, cost);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="comment">// add it to the set of nodes in the graph</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>.push_back(toAdd);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">  129</a></span>&#160;<a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">AOgraph::findByName</a>(<span class="keywordtype">string</span> nameNode)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* temp = NULL;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>.size(); i++)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>[i].nName == nameNode)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            temp = &amp;<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>[i];</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// issue a warning if the node has not been found</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">if</span> (temp == NULL)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[Warning] Name not found.&quot;</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            &lt;&lt;<span class="stringliteral">&quot;Did you really look for &quot;</span> &lt;&lt;nameNode &lt;&lt;<span class="stringliteral">&quot;?&quot;</span> &lt;&lt;endl;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">return</span> temp;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#aa5be6664955f2ae86ffe5b560aaac379">  150</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa5be6664955f2ae86ffe5b560aaac379">AOgraph::updateNodeFeasibility</a>()</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>.size(); i++)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>[i].isFeasible();        </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        </div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#aa569c01b00233f8668e93da2a8d04bf8">  160</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa569c01b00233f8668e93da2a8d04bf8">AOgraph::computeAddCost</a>(<a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;node, <span class="keywordtype">int</span> hIndex)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="comment">// 1. the cost is to be ADDED to the cost of the path</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="comment">// 2. cost = node.nCost + node.arcs[hIndex].hCost</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordtype">int</span> cost = 0;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">// raise an error if the hyperarc index is out of bounds</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">if</span> (hIndex &gt;= (<span class="keywordtype">int</span>)node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>.size())</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[ERROR] The node has only &quot;</span> &lt;&lt;node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>.size() &lt;&lt;<span class="stringliteral">&quot; hyperarcs.&quot;</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            &lt;&lt;<span class="stringliteral">&quot;Hyperarc index &quot;</span> &lt;&lt;hIndex &lt;&lt;<span class="stringliteral">&quot; does not exist.&quot;</span> &lt;&lt;endl;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">// if hIndex == -1, the node is terminal</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">if</span> (hIndex == -1)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        cost = node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a5c0cc92fac735168be8111fae12af690">nCost</a>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="comment">// otherwise, the cost to add is given by node.cost and hyperarc.cost</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        cost = node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a5c0cc92fac735168be8111fae12af690">nCost</a> + node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[hIndex].hCost;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="comment">//DEBUG:cout&lt;&lt;&quot;Node: &quot; &lt;&lt;node.nName &lt;&lt;&quot; - Cost: &quot; &lt;&lt;cost &lt;&lt;endl;</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">return</span> cost;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#a08f3218c510dcb87bfb9c2341ebfe574">  186</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#a08f3218c510dcb87bfb9c2341ebfe574">AOgraph::generatePaths</a>()</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="comment">// if the head node is NULL, there are no paths to generate</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a> == NULL)</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[WARNING] There is no graph to navigate (head == NULL).&quot;</span> &lt;&lt;endl;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="comment">// otherwise, create a path with the head node</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="../../db/dc7/classPath.xhtml">Path</a>* newPath = <span class="keyword">new</span> <a class="code" href="../../db/dc7/classPath.xhtml">Path</a>(0,0);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    newPath-&gt;<a class="code" href="../../db/dc7/classPath.xhtml#a7f68b656205f2fb7a375509c81a8d571">addNode</a>(<a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a>);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.push_back(*newPath);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="comment">// iterate through the paths until they&#39;re all complete</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* currentNode = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a>;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordflow">while</span>(1)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="comment">// find the first not-complete path</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordtype">bool</span> allComplete = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordtype">int</span> currentPathIndex;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.size(); i++)</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        {</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pComplete == <span class="keyword">false</span>)</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                allComplete = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                currentPathIndex = i;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="comment">// if all paths are complete, the generation is done</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">if</span> (allComplete == <span class="keyword">true</span>)</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="comment">// find the first not-checked node in the open path</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordtype">bool</span> allChecked = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordtype">int</span> currentNodeIndex;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].checkedNodes.size(); i++)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].checkedNodes[i] == <span class="keyword">false</span>)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                allChecked = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                currentNode = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].pathNodes[i];</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                currentNodeIndex = i;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="comment">// if all nodes are checked, the path is complete</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">if</span> (allChecked == <span class="keyword">true</span>)</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].pComplete = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        {</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="comment">// if the current node is terminal:</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <span class="comment">// 1. check it</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="comment">// 2. update the path cost with the current node cost</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            <span class="keywordflow">if</span> (currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>.size() == 0)</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].checkedNodes[currentNodeIndex] = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                <span class="keywordtype">int</span> cost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa569c01b00233f8668e93da2a8d04bf8">computeAddCost</a>(*currentNode, -1);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].pCost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].pCost + cost;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            </div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="comment">// if the current node has only one hyperarc:</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="comment">// 1. check it</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="comment">// 2. add the hyperarc index to the path</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <span class="comment">// 3. update the path cost with the current node+only_hyperarc cost</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="comment">// 4. add its child nodes to the path</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <span class="keywordflow">if</span> (currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>.size() == 1)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].checkedNodes[currentNodeIndex] = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].pathArcs.push_back(currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[0].hIndex);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keywordtype">int</span> cost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa569c01b00233f8668e93da2a8d04bf8">computeAddCost</a>(*currentNode, 0);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].pCost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].pCost + cost;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[0].children.size(); i++)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].<a class="code" href="../../db/dbf/classAOgraph.xhtml#a032ca4643c87641235d59506090a53d1">addNode</a>(currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[0].children[i]);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="comment">// if the current node has more than one hyperarc:</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="comment">// 1. create (numArcs-1) copies of the current path</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            <span class="comment">// 2. check the current node in the copies</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <span class="comment">// 3. add the other_hyperarc index to the copies</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="comment">// 4. update the path cost with the current node+other_hyperarc cost</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="comment">// 5. add the child nodes of the last (numArcs-1) arcs to the copies</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="comment">// 6. check the current node in the current path</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="comment">// 7. add the first_hyperarc index to the current path</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <span class="comment">// 8. update the path cost with the current node+first_hyperarc cost</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <span class="comment">// 9. add the child nodes of the first arcs to the current path</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordflow">if</span> (currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>.size() &gt; 1)</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                <span class="keywordtype">int</span> numCopies = currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>.size()-1;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt;numCopies; i++)</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                    newPath = <span class="keyword">new</span> <a class="code" href="../../db/dc7/classPath.xhtml">Path</a>(<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex], <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.size());</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                    newPath-&gt;<a class="code" href="../../db/dc7/classPath.xhtml#af75708504af48a056f4cafb9e18e8395">checkedNodes</a>[currentNodeIndex] = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                    newPath-&gt;<a class="code" href="../../db/dc7/classPath.xhtml#ae6b8583b7ab7f19c113c2c2f59810edf">pathArcs</a>.push_back(currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[i+1].hIndex);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                    <span class="keywordtype">int</span> cost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa569c01b00233f8668e93da2a8d04bf8">computeAddCost</a>(*currentNode, i+1);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                    newPath-&gt;<a class="code" href="../../db/dc7/classPath.xhtml#a620169f2195f0ebd14a3d3713ce1b06f">pCost</a> = newPath-&gt;<a class="code" href="../../db/dc7/classPath.xhtml#a620169f2195f0ebd14a3d3713ce1b06f">pCost</a> + cost;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j&lt; (int)currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[i+1].children.size(); j++)</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                        newPath-&gt;<a class="code" href="../../db/dc7/classPath.xhtml#a7f68b656205f2fb7a375509c81a8d571">addNode</a>(currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[i+1].children[j]);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.push_back(*newPath);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].checkedNodes[currentNodeIndex] = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].pathArcs.push_back(currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[0].hIndex);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                <span class="keywordtype">int</span> cost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa569c01b00233f8668e93da2a8d04bf8">computeAddCost</a>(*currentNode, 0);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].pCost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].pCost + cost;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[0].children.size(); i++)</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[currentPathIndex].<a class="code" href="../../db/dbf/classAOgraph.xhtml#a032ca4643c87641235d59506090a53d1">addNode</a>(currentNode-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[0].children[i]);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    }</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;}</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#a7e7aacb7ff1331939ba5c65c905047af">  299</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#a7e7aacb7ff1331939ba5c65c905047af">AOgraph::setupGraph</a>()</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;{</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="comment">// update the feasibility status of the nodes in the graph</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa5be6664955f2ae86ffe5b560aaac379">updateNodeFeasibility</a>();</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    </div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="comment">// generate all paths navigating the graph</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a08f3218c510dcb87bfb9c2341ebfe574">generatePaths</a>();</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="comment">// set the &quot;checked&quot; property of the nodes in the paths to false</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="comment">// NOTE: during execution, &quot;checked&quot; is used to mark the solved nodes</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.size(); i++)</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j &lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].checkedNodes.size(); j++)</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].checkedNodes[j] = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.size(); i++)</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].printPathInfo();</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="comment">// identify the first suggestion to make (long-sighted strategy chosen BY DEFAULT)</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordtype">string</span> init_suggestion;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    init_suggestion=<a class="code" href="../../db/dbf/classAOgraph.xhtml#a8a50311dd164df031938b1556c6ea57d">suggestNext</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">return</span> init_suggestion;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#a93b794e20581a0fbcbacf6b4768d0645">  327</a></span>&#160;<a class="code" href="../../db/dba/classHyperArc.xhtml">HyperArc</a>* <a class="code" href="../../db/dbf/classAOgraph.xhtml#a93b794e20581a0fbcbacf6b4768d0645">AOgraph::findHyperarc</a>(<a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;parent, <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;child)</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;{</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <a class="code" href="../../db/dba/classHyperArc.xhtml">HyperArc</a>* temp = NULL;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    </div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j&lt; (int)parent.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>.size(); j++)</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    {</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k=0; k&lt; (int)parent.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[j].children.size(); k++)</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        {</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            <span class="keywordflow">if</span>(parent.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[j].children[k]-&gt;nName == child.<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a>)</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                temp = &amp;parent.<a class="code" href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">arcs</a>[j];</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                <span class="comment">//DEBUG:cout&lt;&lt;&quot;Found index: &quot; &lt;&lt;temp-&gt;hIndex &lt;&lt;endl;</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        }</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="comment">/* DEBUG</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">    // raise a warning if no hyperarc was found</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">    if (temp == NULL)</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">        cout&lt;&lt;&quot;[WARNING] There is no hyperarc connecting &quot; &lt;&lt;parent.nName</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">            &lt;&lt;&quot; to &quot; &lt;&lt;child.nName &lt;&lt;&quot;.&quot; &lt;&lt;endl;</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    </div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">return</span> temp;    </div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;}</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#aa04f592cb029679028716e51249f38b2">  357</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa04f592cb029679028716e51249f38b2">AOgraph::computeOverallUpdate</a>(<a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;node)</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;{    </div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="comment">// 1. the cost is to be SUBTRACTED from the cost of the path</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="comment">// 2. the cost is computed as:</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="comment">// a. pathsCosts = set of the costs of the hyperarcs TO the current node</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="comment">// b. cost = max(pathsCosts)</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="comment">// N.B. the cost is to be subtracted from path[i] as:</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="comment">// 1. toSubtract = node.nCost + abs(pathsCosts[path_i] - cost);</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    vector&lt;int&gt; pathsCosts;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    </div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="comment">// for each parent node, find the cost of the hyperarc to the current node</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a2a2ad8395675ca0a1e59fa35f781230e">parents</a>.size(); i++)</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    {</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <a class="code" href="../../db/dba/classHyperArc.xhtml">HyperArc</a>* arc = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a93b794e20581a0fbcbacf6b4768d0645">findHyperarc</a>(*node.<a class="code" href="../../d6/d22/classAOnode.xhtml#a2a2ad8395675ca0a1e59fa35f781230e">parents</a>[i], node);</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="keywordflow">if</span> (arc != NULL)</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        {</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keywordtype">int</span> arcCost = arc-&gt;<a class="code" href="../../db/dba/classHyperArc.xhtml#a237ad2fcfcc2a3be2db42a57dfdab9f2">hCost</a>;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            pathsCosts.push_back(arcCost);</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        }</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    }</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="comment">/* DEBUG</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">    cout&lt;&lt;&quot;maxUpdate is the max of: &quot;;</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">    for (int i=0; i&lt; (int)pathsCosts.size(); i++)</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">        cout&lt;&lt;pathsCosts[i] &lt;&lt;&quot; &quot;;</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">    cout&lt;&lt;endl;</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    </div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="comment">// find the maximum in pathsCosts</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordtype">int</span> cost = pathsCosts[0];</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=1; i&lt; (int)pathsCosts.size(); i++)</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <span class="keywordflow">if</span> (pathsCosts[i] &gt; cost)</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            cost = pathsCosts[i];</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="comment">//DEBUG:cout&lt;&lt;&quot;maxUpdate = &quot; &lt;&lt;cost &lt;&lt;endl;</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    </div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="keywordflow">return</span> cost;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;}</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#a7f06eddccf019609014ed8bcfa4e3131">  398</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#a7f06eddccf019609014ed8bcfa4e3131">AOgraph::updatePaths</a>(<a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a> &amp;solved)</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;{</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="comment">// update the path information (cost) of EACH path as:</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="comment">// toSubtract = solved.nCost + overall_update - path_i_update;</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="comment">// path[i].cost = path[i].cost - toSubtract;</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">pIndices</a>.clear();</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>.clear();</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keywordtype">int</span> toSubtract = solved.<a class="code" href="../../d6/d22/classAOnode.xhtml#a5c0cc92fac735168be8111fae12af690">nCost</a> + <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa04f592cb029679028716e51249f38b2">computeOverallUpdate</a>(solved);</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="comment">//DEBUG:cout&lt;&lt;&quot;solved.nCost = &quot; &lt;&lt;solved.nCost &lt;&lt;endl;</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="comment">//DEBUG:cout&lt;&lt;&quot;maxUpdate = &quot; &lt;&lt;computeOverallUpdate(solved) &lt;&lt;endl;</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    </div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="comment">// find all paths which include the solved node</span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    vector&lt;int&gt; withChild;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.size(); i++)</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pathNodes.size(); j++)</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pathNodes[j]-&gt;nName == solved.<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a>)</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                withChild.push_back(i);</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="comment">/* DEBUG</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment">    cout&lt;&lt;&quot;Paths with solved node: &quot;;</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">    for (int i=0; i &lt; (int)withChild.size(); i++)</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">        cout&lt;&lt;&quot;Path index: &quot; &lt;&lt;withChild[i] &lt;&lt;&quot; &quot;;</span></div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment">    cout&lt;&lt;endl;</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    </div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <span class="comment">// find the paths including the solved node AND any of its parents</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    vector&lt;int&gt; withBoth;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <span class="keywordtype">int</span> toAdd;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; (int)withChild.size(); i++)</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    {</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j &lt; (int)solved.<a class="code" href="../../d6/d22/classAOnode.xhtml#a2a2ad8395675ca0a1e59fa35f781230e">parents</a>.size(); j++)</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k=0; k &lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[withChild[i]].pathNodes.size(); k++)</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                <span class="keywordflow">if</span>(<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[withChild[i]].pathNodes[k]-&gt;nName == solved.<a class="code" href="../../d6/d22/classAOnode.xhtml#a2a2ad8395675ca0a1e59fa35f781230e">parents</a>[j]-&gt;nName)</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                    toAdd = withChild[i];</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <span class="comment">// make sure that paths are added only ONCE</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">if</span> ( std::find(withBoth.begin(), withBoth.end(), toAdd) == withBoth.end() )</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            withBoth.push_back(toAdd);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    }</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="comment">/* DEBUG</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">    cout&lt;&lt;&quot;Paths with solved node &amp; any parent: &quot;;</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment">    for (int i=0; i &lt; (int)withBoth.size(); i++)</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">        cout&lt;&lt;&quot;Path index: &quot; &lt;&lt;withBoth[i] &lt;&lt;&quot; &quot;;</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">    cout&lt;&lt;endl;</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">    */</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="comment">// find the paths containing a DIRECT LINK between the solved node and a parent</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; (int)withBoth.size(); i++)</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    {</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j &lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[withBoth[i]].pathNodes.size(); j++)</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        {</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            <a class="code" href="../../db/dba/classHyperArc.xhtml">HyperArc</a>* arc = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a93b794e20581a0fbcbacf6b4768d0645">findHyperarc</a>(*<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[withBoth[i]].pathNodes[j], solved);</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                    </div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <span class="comment">// update the path cost (if there is a direct link in THIS path)</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <span class="keywordflow">if</span> (arc != NULL)</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            {</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k=0; k &lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[withBoth[i]].pathArcs.size(); k++)</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                {</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[withBoth[i]].pathArcs[k] == arc-&gt;<a class="code" href="../../db/dba/classHyperArc.xhtml#a511c35c08888523fca1c72330f4f8f15">hIndex</a>)</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                    {</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                        <span class="comment">// compute &quot;path_i_update&quot;</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                        <span class="keywordtype">int</span> pathUpdate = arc-&gt;<a class="code" href="../../db/dba/classHyperArc.xhtml#a237ad2fcfcc2a3be2db42a57dfdab9f2">hCost</a>;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                        <span class="comment">//DEBUG:cout&lt;&lt;&quot;pathUpdate = &quot; &lt;&lt;pathUpdate &lt;&lt;endl;</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                        <span class="keywordtype">int</span> thisSubtract = toSubtract - pathUpdate;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                        </div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                        <span class="comment">// update the cost of the path</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[withBoth[i]].updatePath(solved.<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a>, thisSubtract);</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                        </div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                        <span class="comment">// save the index &amp; subtracted cost of the updated path</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">pIndices</a>.push_back(withBoth[i]);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>.push_back(pathUpdate);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                        </div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                    }</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                }</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            }</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        }</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    }</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;}</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div>
<div class="line"><a name="l00479"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#ad27f163e8b9ca4aeba1353ef1783d95a">  479</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#ad27f163e8b9ca4aeba1353ef1783d95a">AOgraph::findOptimalPath</a>()</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;{</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="comment">// raise an error if there are no paths</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.size() == 0)</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    {</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[ERROR] There are no paths navigating the graph. &quot;</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            &lt;&lt;<span class="stringliteral">&quot;Did you run generatePaths()?&quot;</span> &lt;&lt;endl;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    }</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    </div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="keywordtype">int</span> index = 0;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <span class="keywordtype">int</span> cost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[0].pCost;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>.size(); i++)</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    {</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <span class="comment">// raise an error if there are not-complete paths</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pComplete == <span class="keyword">false</span>)</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        {</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            cout&lt;&lt;<span class="stringliteral">&quot;[ERROR] The paths navigating the graph are not complete. &quot;</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                &lt;&lt;<span class="stringliteral">&quot;Did you run generatePaths()?&quot;</span> &lt;&lt;endl;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        }</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        </div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pCost &lt; cost)</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            cost = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[i].pCost;</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            index = i;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        }</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    }</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;The optimal path is: &quot;</span> &lt;&lt;index &lt;&lt;endl;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[index].printPathInfo();</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    </div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keywordflow">return</span> index;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;}</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div>
<div class="line"><a name="l00515"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#ac5058c9153932169e618bb43e612dc35">  515</a></span>&#160;<a class="code" href="../../db/dbf/classAOgraph.xhtml#ac5058c9153932169e618bb43e612dc35">AOgraph::AOgraph</a>(<span class="keywordtype">string</span> name)</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;{</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8c5dd2d57022d5e0e5f12c90f2b81027">gName</a> = name;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a> = NULL;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    </div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <span class="comment">//DEBUG:printGraphInfo();</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;}</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div>
<div class="line"><a name="l00525"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#a45cf5748d787cfd255500471988479fc">  525</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#a45cf5748d787cfd255500471988479fc">AOgraph::loadFromFile</a>(<span class="keywordtype">string</span> fileName)</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;{</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="comment">// raise an error if the graph is not empty</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>.size() != 0)</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    {</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[ERROR] The graph is not empty.&quot;</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            &lt;&lt;<span class="stringliteral">&quot;Do you really want to overwrite the current graph?&quot;</span> &lt;&lt;endl;</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    }</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    </div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    ifstream graphFile(fileName.c_str());</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    cout &lt;&lt;<span class="stringliteral">&quot;Loading graph description from file: &quot;</span> &lt;&lt;fileName &lt;&lt;endl;</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    </div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordflow">while</span> (!graphFile.eof())</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    {</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        <span class="comment">// the first line contains:</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        <span class="comment">// 1. the name of the graph</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        <span class="comment">// 2. the number N=numNodes of nodes</span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        <span class="comment">// 3. the name of the head node (corresponding to the final assembly)</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        <span class="keywordtype">string</span> name;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        <span class="keywordtype">int</span> numNodes;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        <span class="keywordtype">string</span> headName;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        </div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        graphFile &gt;&gt;name &gt;&gt;numNodes &gt;&gt;headName;</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    </div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment">//  cout&lt;&lt;&quot;info0: &quot;&lt;&lt;graphFile&lt;&lt;endl;</span></div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <span class="keywordflow">if</span> (!graphFile)</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8c5dd2d57022d5e0e5f12c90f2b81027">gName</a> = name;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        <span class="comment">// the next N lines contain the name and cost of all the nodes in the graph</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keywordtype">string</span> nameNode;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        <span class="keywordtype">int</span> cost;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; numNodes; i++)</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        {            </div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            graphFile &gt;&gt;nameNode &gt;&gt; cost;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            <span class="keywordflow">if</span> (!graphFile)</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;            <a class="code" href="../../db/dbf/classAOgraph.xhtml#a032ca4643c87641235d59506090a53d1">addNode</a>(nameNode, cost);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        }</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        </div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        <span class="comment">// the next ?? lines contain the descriptions of the hyperarcs in the graph</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        <span class="keywordtype">int</span> hyperarcIndex = 0;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        <span class="keywordflow">while</span> (!graphFile.eof())</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        {</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* father;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            <span class="keywordtype">string</span> nameFather;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            <span class="keywordtype">int</span> numChildren;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            <span class="keywordtype">int</span> hyperarcCost;</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            vector&lt;AOnode*&gt; childNodes;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            </div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            graphFile &gt;&gt;numChildren &gt;&gt;nameFather &gt;&gt;hyperarcCost;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            <span class="keywordflow">if</span> (!graphFile)</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;            father = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">findByName</a>(nameFather);</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;            <span class="comment">//DEBUG:cout&lt;&lt;&quot;nameFather = &quot; &lt;&lt;nameFather &lt;&lt;endl;</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            </div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            <span class="comment">// the next numChildren lines contain the names of the child nodes</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; numChildren; i++)</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            {</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* temp;</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                <span class="keywordtype">string</span> nameChild;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                graphFile &gt;&gt;nameChild;</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                <span class="keywordflow">if</span> (!graphFile)</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                temp = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">findByName</a>(nameChild);</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                childNodes.push_back(temp);</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            }</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            father-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a572c1ba0baa9f0abf1290e142a1a3968">addArc</a>(hyperarcIndex, childNodes, hyperarcCost);</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            hyperarcIndex = hyperarcIndex+1;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        }</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        <span class="comment">// identify the head node in the graph</span></div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a> = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">findByName</a>(headName);</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    }</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    graphFile.close();</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    </div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    <span class="comment">// set up the graph (nodes feasibility, paths costs)</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <span class="keywordtype">string</span> intit_suggestion;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    intit_suggestion=<a class="code" href="../../db/dbf/classAOgraph.xhtml#a7e7aacb7ff1331939ba5c65c905047af">setupGraph</a>();</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;****************&quot;</span>&lt;&lt;endl;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <span class="keywordflow">return</span> intit_suggestion;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;}</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div>
<div class="line"><a name="l00612"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#a520284be02c834241d32d9669598fba1">  612</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#a520284be02c834241d32d9669598fba1">AOgraph::printGraphInfo</a>()</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;{</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    cout&lt;&lt;endl;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Info of graph: &quot;</span> &lt;&lt;<a class="code" href="../../db/dbf/classAOgraph.xhtml#a8c5dd2d57022d5e0e5f12c90f2b81027">gName</a> &lt;&lt;endl;</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Number of nodes: &quot;</span> &lt;&lt;<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>.size() &lt;&lt;endl;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;Head node: &quot;</span> &lt;&lt;<a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a>-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a> &lt;&lt;endl &lt;&lt;endl;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>.size(); i++)</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>[i].printNodeInfo();</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    cout&lt;&lt;endl;</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;}</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="keywordtype">bool</span> AOgraph::NodeFeasibiltyInfo(<span class="keywordtype">int</span> i)</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;{</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>[i].printNodeFeasibiltyInfo();</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;}</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="keywordtype">bool</span> AOgraph::NodeSolveInfo(<span class="keywordtype">int</span> i)</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;{</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>[i].printNodeSolveInfo();</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;}</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="keywordtype">string</span> AOgraph::NodeNameInfo(<span class="keywordtype">int</span> i)</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;{</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">graph</a>[i].printNodeNameInfo();</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;}</div>
<div class="line"><a name="l00637"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#a8a50311dd164df031938b1556c6ea57d">  637</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8a50311dd164df031938b1556c6ea57d">AOgraph::suggestNext</a>(<span class="keywordtype">bool</span> strategy)</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;{</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    <span class="comment">// issue a warning if the graph has been solved already</span></div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a>-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a7b3552a269be035589633969fc3982c9">nSolved</a> == <span class="keyword">true</span>)</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    {</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[WARNING] The graph is solved. No suggestion possible.&quot;</span> &lt;&lt;endl;</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;end&quot;</span>;</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    }</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    </div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    <span class="keywordtype">int</span> optimalPathIndex = 0;</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        </div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="comment">// short-sighted strategy:</span></div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="comment">// pick the path which received the highest benefit from the last action</span></div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <span class="keywordflow">if</span> (strategy == <span class="keyword">false</span>)</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    {</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        <span class="comment">// find the path with highest benefit from last action</span></div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=1; i&lt; (int)<a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>.size(); i++)</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>[i] &gt; <a class="code" href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">pUpdate</a>[optimalPathIndex])</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                optimalPathIndex = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">pIndices</a>[i];</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    }</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    <span class="comment">// long-sighted strategy:</span></div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    <span class="comment">// pick the path which minimizes the cost to completion</span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    <span class="keywordflow">if</span> (strategy == <span class="keyword">true</span>)</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        optimalPathIndex = <a class="code" href="../../db/dbf/classAOgraph.xhtml#ad27f163e8b9ca4aeba1353ef1783d95a">findOptimalPath</a>();</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* suggestion = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">paths</a>[optimalPathIndex].suggestNode();</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    cout&lt;&lt;<span class="stringliteral">&quot;ENDOR suggestion: &quot;</span> &lt;&lt;endl</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        &lt;&lt;<span class="stringliteral">&quot;Suggested path = &quot;</span> &lt;&lt;optimalPathIndex &lt;&lt;endl</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        &lt;&lt;<span class="stringliteral">&quot;Suggested node = &quot;</span> &lt;&lt;suggestion-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a> &lt;&lt;endl;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    </div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    <span class="keywordflow">return</span> suggestion-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">nName</a>;</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;}</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div>
<div class="line"><a name="l00672"></a><span class="lineno"><a class="line" href="../../db/dbf/classAOgraph.xhtml#ac3de5a6fa4472fac8eafbd1ba637c8bd">  672</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/dbf/classAOgraph.xhtml#ac3de5a6fa4472fac8eafbd1ba637c8bd">AOgraph::solveByName</a>(<span class="keywordtype">string</span> nameNode)</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;{</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    <a class="code" href="../../d6/d22/classAOnode.xhtml">AOnode</a>* solved = <a class="code" href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">findByName</a>(nameNode);</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="keywordtype">bool</span> result = solved-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#acf10113d7e2bdb01ca67e6bcf43fabf3">setSolved</a>();</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    <a class="code" href="../../db/dbf/classAOgraph.xhtml#aa5be6664955f2ae86ffe5b560aaac379">updateNodeFeasibility</a>();</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    </div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <span class="comment">// report that the graph has been solved if the solved node is the head node</span></div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">head</a>-&gt;<a class="code" href="../../d6/d22/classAOnode.xhtml#a7b3552a269be035589633969fc3982c9">nSolved</a> == <span class="keyword">true</span>)</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    {</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        cout&lt;&lt;<span class="stringliteral">&quot;[REPORT] The graph is solved (head node solved).&quot;</span> &lt;&lt;endl;</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    }</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    </div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    <span class="comment">// update the path information (cost) of all paths</span></div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    <span class="keywordflow">if</span> (result == <span class="keyword">true</span>)</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        <a class="code" href="../../db/dbf/classAOgraph.xhtml#a7f06eddccf019609014ed8bcfa4e3131">updatePaths</a>(*solved);</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;}</div>
<div class="ttc" id="classAOgraph_xhtml_a28bbee0711fbf8ad10d39e0b9e094155"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a28bbee0711fbf8ad10d39e0b9e094155">AOgraph::pIndices</a></div><div class="ttdeci">vector&lt; int &gt; pIndices</div><div class="ttdoc">indices of the updated paths </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00098">aograph.h:98</a></div></div>
<div class="ttc" id="classPath_xhtml_a620169f2195f0ebd14a3d3713ce1b06f"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#a620169f2195f0ebd14a3d3713ce1b06f">Path::pCost</a></div><div class="ttdeci">int pCost</div><div class="ttdoc">overall cost of all the nodes in the path </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00026">aograph.h:26</a></div></div>
<div class="ttc" id="classPath_xhtml_a7f68b656205f2fb7a375509c81a8d571"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#a7f68b656205f2fb7a375509c81a8d571">Path::addNode</a></div><div class="ttdeci">void addNode(AOnode *node)</div><div class="ttdoc">add a node in the path </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00057">aograph.cpp:57</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a7f06eddccf019609014ed8bcfa4e3131"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a7f06eddccf019609014ed8bcfa4e3131">AOgraph::updatePaths</a></div><div class="ttdeci">void updatePaths(AOnode &amp;solved)</div><div class="ttdoc">update all paths (update path costs when a node is solved) </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00398">aograph.cpp:398</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_ac5058c9153932169e618bb43e612dc35"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#ac5058c9153932169e618bb43e612dc35">AOgraph::AOgraph</a></div><div class="ttdeci">AOgraph(string name)</div><div class="ttdoc">constructor </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00515">aograph.cpp:515</a></div></div>
<div class="ttc" id="classHyperArc_xhtml"><div class="ttname"><a href="../../db/dba/classHyperArc.xhtml">HyperArc</a></div><div class="ttdoc">class &quot;HyperArc&quot; for the hyperarc connecting one parent node to a number of child nodes in an AND rel...</div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00020">aonode.h:20</a></div></div>
<div class="ttc" id="classPath_xhtml_a885c9820459010ec106031910947bd80"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#a885c9820459010ec106031910947bd80">Path::printPathInfo</a></div><div class="ttdeci">void printPathInfo()</div><div class="ttdoc">display path information </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00034">aograph.cpp:34</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a8c5dd2d57022d5e0e5f12c90f2b81027"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a8c5dd2d57022d5e0e5f12c90f2b81027">AOgraph::gName</a></div><div class="ttdeci">string gName</div><div class="ttdoc">name of the graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00094">aograph.h:94</a></div></div>
<div class="ttc" id="classAOnode_xhtml"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml">AOnode</a></div><div class="ttdoc">class &quot;AOnode&quot; for the generic node element of an AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00041">aonode.h:41</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_aa04f592cb029679028716e51249f38b2"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#aa04f592cb029679028716e51249f38b2">AOgraph::computeOverallUpdate</a></div><div class="ttdeci">int computeOverallUpdate(AOnode &amp;node)</div><div class="ttdoc">compute the overall update cost (intermediate step to update the path cost) </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00357">aograph.cpp:357</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a8437faadc195ca2835e41c384777d061"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a8437faadc195ca2835e41c384777d061">AOgraph::findByName</a></div><div class="ttdeci">AOnode * findByName(string nameNode)</div><div class="ttdoc">find a node by name </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00129">aograph.cpp:129</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_aa569c01b00233f8668e93da2a8d04bf8"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#aa569c01b00233f8668e93da2a8d04bf8">AOgraph::computeAddCost</a></div><div class="ttdeci">int computeAddCost(AOnode &amp;node, int hIndex)</div><div class="ttdoc">compute the cost to add to a path </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00160">aograph.cpp:160</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a520284be02c834241d32d9669598fba1"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a520284be02c834241d32d9669598fba1">AOgraph::printGraphInfo</a></div><div class="ttdeci">void printGraphInfo()</div><div class="ttdoc">display graph information </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00612">aograph.cpp:612</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_aa5be6664955f2ae86ffe5b560aaac379"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#aa5be6664955f2ae86ffe5b560aaac379">AOgraph::updateNodeFeasibility</a></div><div class="ttdeci">void updateNodeFeasibility()</div><div class="ttdoc">update the feasibility status of the nodes in the graph </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00150">aograph.cpp:150</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a572c1ba0baa9f0abf1290e142a1a3968"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a572c1ba0baa9f0abf1290e142a1a3968">AOnode::addArc</a></div><div class="ttdeci">void addArc(int hyperarcIndex, vector&lt; AOnode * &gt; nodes, int hyperarcCost)</div><div class="ttdoc">add an hyperarc to child nodes </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00051">aonode.cpp:51</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a45cf5748d787cfd255500471988479fc"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a45cf5748d787cfd255500471988479fc">AOgraph::loadFromFile</a></div><div class="ttdeci">string loadFromFile(string fileName)</div><div class="ttdoc">load the graph description from a file </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00525">aograph.cpp:525</a></div></div>
<div class="ttc" id="classPath_xhtml"><div class="ttname"><a href="../../db/dc7/classPath.xhtml">Path</a></div><div class="ttdoc">class &quot;Path&quot; for each unique path traversing the graph from the head to the leaves ...</div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00022">aograph.h:22</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a3b49c18c37014abdad084e1939fe2486"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a3b49c18c37014abdad084e1939fe2486">AOgraph::head</a></div><div class="ttdeci">AOnode * head</div><div class="ttdoc">pointer to the node = final assembly </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00096">aograph.h:96</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_ac3de5a6fa4472fac8eafbd1ba637c8bd"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#ac3de5a6fa4472fac8eafbd1ba637c8bd">AOgraph::solveByName</a></div><div class="ttdeci">void solveByName(string nameNode)</div><div class="ttdoc">solve a node, finding it by name </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00672">aograph.cpp:672</a></div></div>
<div class="ttc" id="classAOnode_xhtml_af28c48c20f4bc2cdc0d297d87c8bbe53"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#af28c48c20f4bc2cdc0d297d87c8bbe53">AOnode::nName</a></div><div class="ttdeci">string nName</div><div class="ttdoc">name of the node </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00044">aonode.h:44</a></div></div>
<div class="ttc" id="classAOnode_xhtml_acf10113d7e2bdb01ca67e6bcf43fabf3"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#acf10113d7e2bdb01ca67e6bcf43fabf3">AOnode::setSolved</a></div><div class="ttdeci">bool setSolved()</div><div class="ttdoc">set the node as solved </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/dc8/aonode_8cpp_source.xhtml#l00136">aonode.cpp:136</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a30bcb49edb592fa8c09846f8afff5c89"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a30bcb49edb592fa8c09846f8afff5c89">AOgraph::pUpdate</a></div><div class="ttdeci">vector&lt; int &gt; pUpdate</div><div class="ttdoc">costs subtracted to the updated paths </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00099">aograph.h:99</a></div></div>
<div class="ttc" id="classPath_xhtml_a6f0a8ece7049d31349dd918e3732f312"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#a6f0a8ece7049d31349dd918e3732f312">Path::updatePath</a></div><div class="ttdeci">void updatePath(string nameNode, int cost)</div><div class="ttdoc">update the path information (when a node is solved) </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00069">aograph.cpp:69</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a8c739f761ad7badefb9fa1b6fa946cc2"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a8c739f761ad7badefb9fa1b6fa946cc2">AOnode::arcs</a></div><div class="ttdeci">vector&lt; HyperArc &gt; arcs</div><div class="ttdoc">hyperarcs connecting the node to child nodes </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00048">aonode.h:48</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a1a15bd520a88dab17a2889577f0d8c6a"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a1a15bd520a88dab17a2889577f0d8c6a">AOgraph::graph</a></div><div class="ttdeci">vector&lt; AOnode &gt; graph</div><div class="ttdoc">set of nodes in the AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00095">aograph.h:95</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_ad27f163e8b9ca4aeba1353ef1783d95a"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#ad27f163e8b9ca4aeba1353ef1783d95a">AOgraph::findOptimalPath</a></div><div class="ttdeci">int findOptimalPath()</div><div class="ttdoc">find the optimal path (long-sighted strategy) </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00479">aograph.cpp:479</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a7b3552a269be035589633969fc3982c9"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a7b3552a269be035589633969fc3982c9">AOnode::nSolved</a></div><div class="ttdeci">bool nSolved</div><div class="ttdoc">solved: the operation has been performed </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00046">aonode.h:46</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a5c0cc92fac735168be8111fae12af690"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a5c0cc92fac735168be8111fae12af690">AOnode::nCost</a></div><div class="ttdeci">int nCost</div><div class="ttdoc">cost of the node </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00045">aonode.h:45</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a032ca4643c87641235d59506090a53d1"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a032ca4643c87641235d59506090a53d1">AOgraph::addNode</a></div><div class="ttdeci">void addNode(string nameNode, int cost)</div><div class="ttdoc">add a node in the graph </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00117">aograph.cpp:117</a></div></div>
<div class="ttc" id="classAOnode_xhtml_a2a2ad8395675ca0a1e59fa35f781230e"><div class="ttname"><a href="../../d6/d22/classAOnode.xhtml#a2a2ad8395675ca0a1e59fa35f781230e">AOnode::parents</a></div><div class="ttdeci">vector&lt; AOnode * &gt; parents</div><div class="ttdoc">nodes having this node as a child node </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00049">aonode.h:49</a></div></div>
<div class="ttc" id="classPath_xhtml_a4cfb1a7c9d144b895a87f116763cffce"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#a4cfb1a7c9d144b895a87f116763cffce">Path::pathNodes</a></div><div class="ttdeci">vector&lt; AOnode * &gt; pathNodes</div><div class="ttdoc">set of the nodes in the path </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00028">aograph.h:28</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a8a50311dd164df031938b1556c6ea57d"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a8a50311dd164df031938b1556c6ea57d">AOgraph::suggestNext</a></div><div class="ttdeci">string suggestNext(bool strategy)</div><div class="ttdoc">suggest the node to solve </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00637">aograph.cpp:637</a></div></div>
<div class="ttc" id="classPath_xhtml_ae6b8583b7ab7f19c113c2c2f59810edf"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#ae6b8583b7ab7f19c113c2c2f59810edf">Path::pathArcs</a></div><div class="ttdeci">vector&lt; int &gt; pathArcs</div><div class="ttdoc">set of the hyperarcs in the path </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00029">aograph.h:29</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a93b794e20581a0fbcbacf6b4768d0645"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a93b794e20581a0fbcbacf6b4768d0645">AOgraph::findHyperarc</a></div><div class="ttdeci">HyperArc * findHyperarc(AOnode &amp;parent, AOnode &amp;child)</div><div class="ttdoc">find the hyperarc connecting a parent to a child node </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00327">aograph.cpp:327</a></div></div>
<div class="ttc" id="classHyperArc_xhtml_a237ad2fcfcc2a3be2db42a57dfdab9f2"><div class="ttname"><a href="../../db/dba/classHyperArc.xhtml#a237ad2fcfcc2a3be2db42a57dfdab9f2">HyperArc::hCost</a></div><div class="ttdeci">int hCost</div><div class="ttdoc">cost of the hyperarc </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00025">aonode.h:25</a></div></div>
<div class="ttc" id="classPath_xhtml_af75708504af48a056f4cafb9e18e8395"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#af75708504af48a056f4cafb9e18e8395">Path::checkedNodes</a></div><div class="ttdeci">vector&lt; bool &gt; checkedNodes</div><div class="ttdoc">checked: the node has been analysed </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00030">aograph.h:30</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a68db1975c2fefa3845e0604af379bbf6"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a68db1975c2fefa3845e0604af379bbf6">AOgraph::paths</a></div><div class="ttdeci">vector&lt; Path &gt; paths</div><div class="ttdoc">set of paths in the AND-OR graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00097">aograph.h:97</a></div></div>
<div class="ttc" id="classPath_xhtml_a536e01bc729559a9a53eb9c47ec2e684"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#a536e01bc729559a9a53eb9c47ec2e684">Path::pComplete</a></div><div class="ttdeci">bool pComplete</div><div class="ttdoc">complete: the path fully traverses the graph </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00027">aograph.h:27</a></div></div>
<div class="ttc" id="classHyperArc_xhtml_a511c35c08888523fca1c72330f4f8f15"><div class="ttname"><a href="../../db/dba/classHyperArc.xhtml#a511c35c08888523fca1c72330f4f8f15">HyperArc::hIndex</a></div><div class="ttdeci">int hIndex</div><div class="ttdoc">index of the hyperarc </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d3a/aonode_8h_source.xhtml#l00023">aonode.h:23</a></div></div>
<div class="ttc" id="classPath_xhtml_ac0e5a1573ee1096da427266c09dee678"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#ac0e5a1573ee1096da427266c09dee678">Path::suggestNode</a></div><div class="ttdeci">AOnode * suggestNode()</div><div class="ttdoc">find the feasible node to suggest </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00087">aograph.cpp:87</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a7e7aacb7ff1331939ba5c65c905047af"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a7e7aacb7ff1331939ba5c65c905047af">AOgraph::setupGraph</a></div><div class="ttdeci">string setupGraph()</div><div class="ttdoc">set up a graph </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00299">aograph.cpp:299</a></div></div>
<div class="ttc" id="classPath_xhtml_affd535b90eec827989d84bb8f9dbc477"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#affd535b90eec827989d84bb8f9dbc477">Path::pIndex</a></div><div class="ttdeci">int pIndex</div><div class="ttdoc">index of the path </div><div class="ttdef"><b>Definition:</b> <a href="../../de/df2/aograph_8h_source.xhtml#l00025">aograph.h:25</a></div></div>
<div class="ttc" id="classAOgraph_xhtml_a08f3218c510dcb87bfb9c2341ebfe574"><div class="ttname"><a href="../../db/dbf/classAOgraph.xhtml#a08f3218c510dcb87bfb9c2341ebfe574">AOgraph::generatePaths</a></div><div class="ttdeci">void generatePaths()</div><div class="ttdoc">generate all possible paths navigating the graph </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00186">aograph.cpp:186</a></div></div>
<div class="ttc" id="classPath_xhtml_afbe6763440ffa3fd8a3d7edda1a5b1f3"><div class="ttname"><a href="../../db/dc7/classPath.xhtml#afbe6763440ffa3fd8a3d7edda1a5b1f3">Path::Path</a></div><div class="ttdeci">Path(int cost, int index)</div><div class="ttdoc">constructor </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d6d/aograph_8cpp_source.xhtml#l00013">aograph.cpp:13</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Sep 21 2017 11:52:31 for planner by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
